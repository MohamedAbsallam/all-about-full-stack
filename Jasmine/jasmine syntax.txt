describe(“suite description”, () => {
    it(“describes the spec”, () => {
        const myVar = true;
        expect(myVar).toBe(true);
    });
});


Test Types

 -- Truthiness
    .toBeTruthy()
    passes when
    The expectation has any non-zero value
    The expectation evaluates to true

    .toBeFalsy()
    passes when 
    the value is:
    0
    '' (an empty string)
    undefined
    null
    NaN

    If you just need the Boolean value of false, use .toEqual()

-- Numerical Matchers
    .toBeCloseTo(expected value, precision)
    Passes if a value is within a specified precision of the expected value
    Precision is optional and is represented the number of decimal points to check (defaults to 2)
    
    .toBeGreaterThan(expected value)
    
    .toBeLessThan(expected value)
    
    .toBeGreaterThanOrEqual(expected value)
    
    .toBeLessThanOrEqual(expected value)
   
    --- Negating Other Matchers
        In JavaScript, use the ! to negate
        In TypeScript, use not
        In Jasmine, use .not
** Exceptions
    .toThrow(expected value)

    .toThrowError(expected value, expected message) (expected value and expected message are optional)
    Other Matchers
    
    .toContain(expected value)
    
    .toMatch(expected value)
    
    .toBeDefined()
    
    .toBeUndefined()
    
    .toBeNull()
    
    .toBeNan()

* More Custome Matchers at : https://jasmine.github.io/tutorials/custom_matcher